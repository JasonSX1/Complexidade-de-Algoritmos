package br.edu.ifba.cassino.cliente.util;

import javax.sound.sampled.*;
import java.io.File;
import java.io.IOException;

public class GeradorDeChaveAleatoria {

    private static final int TAMANHO_CHAVE = 16; // 16 bytes (128 bits)
    private static final int TAMANHO_AMOSTRA = 1024; // N칰mero de bytes lidos do 치udio

    /**
     * 游댳 Gera uma chave aleat칩ria a partir de um arquivo de 치udio
     * @param caminhoAudio Caminho do arquivo de 치udio
     * @return Chave aleat칩ria em bytes
     * @throws Exception Se ocorrer erro ao processar o 치udio
     */
    public static byte[] gerarChaveAleatoria(String caminhoAudio) throws Exception {
        File arquivoAudio = new File(caminhoAudio);
        AudioInputStream audioStream = AudioSystem.getAudioInputStream(arquivoAudio);

        byte[] buffer = new byte[TAMANHO_AMOSTRA];
        int bytesLidos = audioStream.read(buffer, 0, TAMANHO_AMOSTRA);
        audioStream.close();

        if (bytesLidos < TAMANHO_CHAVE) {
            throw new IOException("Arquivo de 치udio muito curto para gerar chave aleat칩ria.");
        }

        // 游댳 Usa os primeiros bytes para gerar uma chave aleat칩ria
        byte[] chaveAleatoria = new byte[TAMANHO_CHAVE];
        System.arraycopy(buffer, 0, chaveAleatoria, 0, TAMANHO_CHAVE);

        return chaveAleatoria;
    }
}
